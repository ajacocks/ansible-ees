---
version: 3

build_arg_defaults:
  ANSIBLE_GALAXY_CLI_COLLECTION_OPTS: '--ignore-certs'

dependencies:
  python_interpreter:
    python_path: "/usr/bin/python3.12"
  ansible_core:
    package_pip: ansible-core
  ansible_runner:
    package_pip: ansible-runner
  python: files/requirements.txt
  system: files/bindep.txt
  galaxy: files/requirements.yml

images:
  base_image:
    #name: 'registry.redhat.io/ansible-automation-platform-24/ee-minimal-rhel9:latest'
    name: 'registry.redhat.io/ansible-automation-platform-24/ee-minimal-rhel8:latest'

options:
  package_manager_path: /usr/bin/microdnf


additional_build_files:
  - src: ansible.cfg
    dest: configs

additional_build_steps:
  prepend_base:
    - RUN whoami
    - RUN cat /etc/os-release
    - RUN echo PKGMGR = $PKGMGR, PYCMD = $PYCMD
    - RUN microdnf update -y --nodocs --setopt install_weak_deps=0 && microdnf install -y --nodocs --setopt install_weak_deps=0 glibc-langpack-en python3.12-devel python3.12-packaging python3.12-pip python3.12-pip-wheel python3.12-setuptools python3.12-wheel python3.12-cryptography
    - RUN alternatives --set python3 /usr/bin/python3.12
    - RUN $PYCMD -m pip install --upgrade pip setuptools
  prepend_galaxy:
    # Add custom ansible.cfg which defines collection install sources
    - ADD _build/configs/ansible.cfg /etc/ansible/ansible.cfg
    # AH_TOKEN is passed into the build command using a --build-arg
    # accept this as an ARG during this stage to reference later
    - ARG AH_TOKEN
    # Use the above ARG to define an environment variable holding
    # the token for resolving private collections
    - ENV ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN=$AH_TOKEN
  append_base:
      #- RUN microdnf install -y --enablerepo=rhocp-4.12-for-rhel-9-x86_64-rpms --releasever=9.4 openshift-clients
    - RUN microdnf install -y --enablerepo=rhocp-4.12-for-rhel-8-x86_64-rpms --releasever=8.10 openshift-clients
